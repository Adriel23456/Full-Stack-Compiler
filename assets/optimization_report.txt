============================================================
LLVM IR OPTIMIZATION REPORT
============================================================
Optimization Level: 3
Platform: linux
Input: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph.ll
Output: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph_opt.ll

Optimization Statistics:
----------------------------------------
Metric                   Before      After     Change
----------------------------------------
functions                     2          2          0
globals                       4          4          0
alloca                        0          0          0
load                         23         17         -6
store                         7          5         -2
calls                        13         13          0
branches                     10          2         -8
basic_blocks                 12          2        -10
total_lines                 151        118        -33

Optimizations Applied:
----------------------------------------
[OK] Constant merging
[OK] Dead argument elimination
[OK] Global dead code elimination
[OK] Global optimization
[OK] Function inlining
[OK] Control flow simplification
[OK] Instruction combining
[OK] Global value numbering
[OK] Dead code elimination
[OK] Aggressive dead code elimination
[OK] Loop unrolling
[OK] Loop invariant code motion

Optimization complete (Level 3)
Lines: 162 -> 130 (19.8% reduction)
Output: vGraph_opt.ll