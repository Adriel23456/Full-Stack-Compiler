============================================================
LLVM IR OPTIMIZATION REPORT
============================================================
Optimization Level: 3
Input: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph.ll
Output: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph_opt.ll

Optimization Statistics:
----------------------------------------
Metric                   Before      After     Change
----------------------------------------
functions                     3          3          0
globals                      13         14         +1
alloca                        2          0         -2
load                         66         38        -28
store                        34         26         -8
calls                        23         24         +1
branches                     46         16        -30
basic_blocks                 49          3        -46
total_lines                 445        306       -139

Optimizations Applied:
----------------------------------------
✓ Constant merging
✓ Dead argument elimination
✓ Global dead code elimination
✓ Global optimization
✓ Function inlining
✓ Control flow simplification
✓ Instruction combining
✓ Global value numbering
✓ Dead code elimination
✓ Aggressive dead code elimination
✓ Loop unrolling
✓ Loop invariant code motion

Optimization complete (Level 3)
Lines: 457 → 335 (26.7% reduction)
Output: vGraph_opt.ll