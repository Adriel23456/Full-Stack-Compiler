============================================================
LLVM IR OPTIMIZATION REPORT
============================================================
Optimization Level: 3
Platform: linux
Input: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph.ll
Output: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph_opt.ll

Optimization Statistics:
----------------------------------------
Metric                   Before      After     Change
----------------------------------------
functions                     4          4          0
globals                      12         13         +1
alloca                        8          0         -8
load                         61         32        -29
store                        33         19        -14
calls                        20         20          0
branches                     30         12        -18
basic_blocks                 34          4        -30
total_lines                 373        237       -136

Optimizations Applied:
----------------------------------------
[OK] Constant merging
[OK] Dead argument elimination
[OK] Global dead code elimination
[OK] Global optimization
[OK] Function inlining
[OK] Control flow simplification
[OK] Instruction combining
[OK] Global value numbering
[OK] Dead code elimination
[OK] Aggressive dead code elimination
[OK] Loop unrolling
[OK] Loop invariant code motion

Optimization complete (Level 3)
Lines: 386 -> 262 (32.1% reduction)
Output: vGraph_opt.ll