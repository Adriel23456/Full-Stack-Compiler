============================================================
LLVM IR OPTIMIZATION REPORT
============================================================
Optimization Level: 3
Input: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph.ll
Output: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph_opt.ll

Optimization Statistics:
----------------------------------------
Metric                   Before      After     Change
----------------------------------------
functions                     2          2          0
globals                       8          8          0
alloca                        0          0          0
load                          5         10         +5
store                         5         10         +5
calls                         5          8         +3
branches                      0          0          0
basic_blocks                  2          2          0
total_lines                  57         75        +18

Optimizations Applied:
----------------------------------------
✓ Constant merging
✓ Dead argument elimination
✓ Global dead code elimination
✓ Global optimization
✓ Function inlining
✓ Control flow simplification
✓ Instruction combining
✓ Global value numbering
✓ Dead code elimination
✓ Aggressive dead code elimination
✓ Loop unrolling
✓ Loop invariant code motion

Optimization complete (Level 3)
Lines: 68 → 81 (-19.1% reduction)
Output: vGraph_opt.ll