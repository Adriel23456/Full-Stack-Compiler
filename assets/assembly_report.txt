============================================================
ASSEMBLY CODE GENERATION REPORT
============================================================
Platform: linux
Input: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph_opt.ll
Output: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph.asm
Object: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph.o
Executable: /home/adriel/Documents/Full-Stack-Compiler/out/vGraph.exe

Build Tools Used:
----------------------------------------
C Compiler          : clang
Assembler           : as
Linker              : clang
Archiver            : ar

Assembly Statistics:
----------------------------------------
Total Lines         :        243
Code Lines          :        148
Functions           :          6
Labels              :          6
Calls               :         13
Jumps               :          4
Moves               :         50
Arithmetic          :         36
Stack Ops           :         15

Build Steps:
----------------------------------------
1. Generate assembly from LLVM IR
2. Build runtime library (if needed)
3. Assemble to object file
4. Link with runtime to create executable

Target Architecture: x86-64
Assembly Syntax: AT&T (GNU Assembler)

Functions found:
----------------------------------------
  - main
  - _main
  - x
  - y
  - t
  - c